name: Build .NET Framework projects

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: Toolkit.Desktop.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    strategy:
      matrix:
        targetplatform: [x64]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Setup Nuget
    - name: Setup Nuget
      uses: nuget/setup-nuget@v1

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    # Nuget Restore
    - name: Restore nuget packages
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    # Build Config
    - name: Build Config
      run: msbuild ${{env.SOLUTION_FILE_PATH}} -target:"Config" -p:Configuration=${{env.BUILD_CONFIGURATION}} -maxCpuCount

    # Build Toolkit
    - name: Build Toolkit
      run: msbuild ${{env.SOLUTION_FILE_PATH}} -target:"SimpleDICOMToolkit" -p:Configuration=${{env.BUILD_CONFIGURATION}} -maxCpuCount

    # Build Toolkit
    - name: Build UID Generator
      run: msbuild ${{env.SOLUTION_FILE_PATH}} -target:"UIDGenerator" -p:Configuration=${{env.BUILD_CONFIGURATION}} -maxCpuCount
